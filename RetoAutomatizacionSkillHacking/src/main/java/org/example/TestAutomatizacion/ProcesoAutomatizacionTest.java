// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;

public class ProcesoAutomatizacionTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void procesoAutomatizacion() {
    // Test name: ProcesoAutomatizacion
    // Step # | name | target | value
    // 1 | open | /shop/ |
    driver.get("https://practice.automationtesting.in/shop/");
    // 2 | setWindowSize | 1552x832 |
    driver.manage().window().setSize(new Dimension(1552, 832));
    // 3 | mouseOver | linkText=Shop |
    {
      WebElement element = driver.findElement(By.linkText("Shop"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 4 | click | css=.post-169 > .button |
    driver.findElement(By.cssSelector(".post-169 > .button")).click();
    // 5 | click | css=.post-170 > .button |
    driver.findElement(By.cssSelector(".post-170 > .button")).click();
    // 6 | click | css=.cartcontents |
    driver.findElement(By.cssSelector(".cartcontents")).click();
    // 7 | mouseOver | linkText=Demo Site |
    {
      WebElement element = driver.findElement(By.linkText("Demo Site"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 8 | click | linkText=× |
    driver.findElement(By.linkText("×")).click();
    // 9 | runScript | window.scrollTo(0,200) |
    js.executeScript("window.scrollTo(0,200)");
    // 10 | click | css=strong > .woocommerce-Price-amount |
    driver.findElement(By.cssSelector("strong > .woocommerce-Price-amount")).click();
    // 11 | store | css=strong > .woocommerce-Price-amount | myValue
    vars.put("myValue", "css=strong > .woocommerce-Price-amount");
    // 12 | if | ${myValue} < 400  |
    if ((Boolean) js.executeScript("return (arguments[0] < 400)", vars.get("myValue"))) {
      // 13 | echo | Valor es menor que 400 |
      System.out.println("Valor es menor que 400");
      // 14 | else |  |
    } else {
      // 15 | echo | Valor es mayor o igual que 400 |
      System.out.println("Valor es mayor o igual que 400");
      // 16 | end |  |
    }
  }
}
